/*
 * Privacy Transaction Disclosure API
 *
 * API specification for selective disclosure of privacy-preserving transactions across various protocols including Penumbra and Solana Confidential Transactions. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@example.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DisclosedTransactionResult {
    #[serde(rename = "disclosureTransactions", skip_serializing_if = "Option::is_none")]
    pub disclosure_transactions: Option<models::DisclosedTransactionResultDisclosureTransactions>,
    #[serde(rename = "disclosureErrors", skip_serializing_if = "Option::is_none")]
    pub disclosure_errors: Option<models::DisclosedTransactionResultDisclosureErrors>,
}

impl DisclosedTransactionResult {
    pub fn new() -> DisclosedTransactionResult {
        DisclosedTransactionResult {
            disclosure_transactions: None,
            disclosure_errors: None,
        }
    }
}

